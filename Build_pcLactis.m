% Timing: ~ 300 s (without retrieving kcat)
% Timing: ~ 900 s (with retrieving kcat)
tic;

%% Import M model.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Import a normal M model (Excel format).
%   The excel file generated by CBMpy should be manually editted.
%   1. Copy the .xls file and then paste into a new .xlsx file using PASTE
%      VALUES. Otherwise String info will be 'NaN'. Besides, the new Excel
%      file should be named 'M_model.xlsx' with 'reactions',
%      'network_react', 'metabolites' and 'gpr' sheet.
%   2. Change inf to 1000, and -inf to -1000.
%   3. Change 'R_biomass_LLA_atpm' to the same type with 'R_biomass_LLA'.
%      Then change the coefficients of atp, h2o, adp, pi and h to 0.
%   4. Add 'dummy', except 'R_G5SADs', 'R_ATPM', 'R_biomass_LLA',
%      'R_biomass_LLA_atpm', 'R_DNAS_LLA', 'R_PROTS_LLA_v3', 'R_RNAS_LLA', 
%      and exchange rxns.
%   5. Change GAM to 34 according to 'Estimate_ATP_M_Model.m'.

[num_rxn, txt_rxn, ~] = xlsread('M_model_201908.xlsx','reactions');
[num_matrix, txt_matrix, ~] = xlsread('M_model_201908.xlsx','network_react');
[~, ~, raw_metID] = xlsread('M_model_201908.xlsx','metabolites');

%% M modelling: Convert CBMpy to COBRA matrix.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Considering the fact that the M model generated by CBMpy cannot be read
% by COBRA, the CBMpy-based M model should be modified to be compatible
% with COBRA toolbox.

[M_Matrix_original,M_Model] = CBMpy2COBRA(num_rxn,txt_rxn,...
                                          num_matrix,txt_matrix);
clear num_rxn txt_rxn num_matrix txt_matrix;

%% M modelling: Reformulation.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Reformulate M model reactions (only for enzymatic reactions).
%   What will get:
%   1. Reactions with isozymes (i.e., 'OR' case in GPR) will be copied,
%   each isozyme will be assigned to each copy. Reactions with complexes
%   (i.e., 'AND' case in GPR) will not be copied but there will be complex
%   formation reactions for production of the complexes in E model.
%   2. Reversible reactions will be split into forward and reverse ones.

[Metabolic_Matrix,M_Model_total] = ReformulateMModel(M_Matrix_original);
clear M_Matrix_original;

%% Count total genes in model.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Gene_list = CountGenes(M_Model_total);
clear M_Model_total;

%% Determine transcription units (TUs).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Transcription units were downloaded from BioCyc for 'llmg_xxxx' genes.
%   For plasmid transcription, we grouped neighbouring genes having the
%   same transcription direction into the same TU. This was done manually. 

[TU,Gene_list] = GetTranscriptionUnits(Gene_list);

%% Sequence processing.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Here will generate structures for genes and proteins with their sequence
% information.
% Chromosome sequences were downloaded from NCBI:
% (NCBI Reference Sequence: NC_009004.1, Assembly: GCF_000009425.1)
% https://www.ncbi.nlm.nih.gov/nuccore/NC_009004.1

[Seq_CDS_AA_total,Seq_gene_NA_total,Gene_list] = ProcessSequence(Gene_list);

%% modelling: Initialization.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Model_Matrix = MatrixGeneration;

% Generate protein degradation matrix.
E_Protein_degradation = MatrixGeneration;

% Generate enzyme formation matrix.
E_Enzyme_formation = MatrixGeneration;

% Generate enzyme dilution matrix.
E_Enzyme_dilution = MatrixGeneration;

% Generate RNA dilution matrix.
E_RNA_dilution = MatrixGeneration;

%% modelling: Protein assembly.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Running the code below will get structure for protein assembly reactions,
% named E_Protein_assembly.

[E_Protein_assembly,Functional_protein] = AddProteinAssemblyRxn(Gene_list);

%% modelling: Add an unmodelled protein.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% By adding enzyme and RNA dilution reactions, the model is able to account
% for the dilution of protein and RNA in biomass. But the model does not
% contain all the proteins in L. lactis. An unmodelled protein should be
% added to represent the total of the remaining proteins. When synthesizing
% the protein, the rest of proteins and RNA will be considerred in the
% model.

% Add an unmodelled protein.
[Gene_list,...
 TU,...
 Seq_gene_NA_total,...
 Seq_CDS_AA_total,...
 E_Protein_assembly,...
 Functional_protein,...
 E_Enzyme_formation,...
 E_Protein_degradation,...
 E_Enzyme_dilution] = AddUnmodeledProtein(Gene_list,...
                                          TU,...
                                          Seq_gene_NA_total,...
                                          Seq_CDS_AA_total,...
                                          E_Protein_assembly,...
                                          Functional_protein,...
                                          E_Enzyme_formation,...
                                          E_Protein_degradation,...
                                          E_Enzyme_dilution);

%% modelling: Add dummy information.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% As dummy GPRs have been added into M model, sequence and other
% information will be added here.

% Add dummy information.
[Gene_list,...
 TU,...
 Seq_gene_NA_total,...
 Seq_CDS_AA_total] = AddDummyInfo(Gene_list,...
                               TU,...
                               Seq_gene_NA_total,...
                               Seq_CDS_AA_total);

clear AA_sequence NA_sequence;


%% modelling: Metabolism.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

[M_Metabolism,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation,...
 RxnGPR] = AddMetabolicRxn(Metabolic_Matrix,...
                           Functional_protein,...
                           E_Enzyme_formation,...
                           E_Enzyme_dilution,...
                           E_Protein_degradation);

% Assign kcat.
% The metabolic kcats can be collected and assigned using GECKO method. Run
% the code below, then will get kcats for all the metabolic enzymes. The
% collected kcats have been stored in the file 'k_parameter.xlsx', so this 
% code can be skipped.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% [RxnGPR,kcats] = AssignMetabolicKcat(RxnGPR,Metabolic_Matrix,raw_metID);
% clear RxnGPR;
%%%%%%% Paste the produced file 'kcat_M.xls' to 'k_parameter.xlsx'. %%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear raw_metID;

%% modelling: Transcription.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
% Generate transcription matrix.
E_Transcription = MatrixGeneration;

% Add transcription initiation reactions for TUs.
[E_Transcription,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddTranscriptionInitiationRxn(E_Transcription,...
                                                        Gene_list,TU,...
                                                        Seq_gene_NA_total,...
                                                        Functional_protein,...
                                                        E_Enzyme_formation,...
                                                        E_Enzyme_dilution,...
                                                        E_Protein_degradation);

% Add transcription reactions.
[E_Transcription,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddTranscriptionRxn(E_Transcription,Gene_list,...
                                              TU,Functional_protein,...
                                              E_Enzyme_formation,...
                                              E_Enzyme_dilution,...
                                              E_Protein_degradation);

%% modelling: Stable RNA cleavage.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Stable RNA (tRNA and rRNA) should be cleaved from TUs, resulting in rRNA,
% tRNA and sub-TUs, which will be degraded or translated if it contains
% genes. Other TUs containing neither tRNA nor rRNA will not be cleaved.

%	Add Stable RNA cleavage reactions.
[E_Stable_RNA_cleavage,...
 Sub_TU_cleaved,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation,...
 TU_cleaved] = AddRNACleaveRxn(Gene_list,TU,Seq_gene_NA_total,...
                               Functional_protein,...
                               E_Enzyme_formation,...
                               E_Enzyme_dilution,...
                               E_Protein_degradation);

%% modelling: mRNA degradation.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% All the TUs containing no stable RNA should be considered in mRNA
% degradation subprocess, also including Sub-TUs.

% Add mRNA degradation reactions.
[E_mRNA_degradation,...
 TU_degraded,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation,...
 E_RNA_dilution] = AddmRNADegradationRxn(Gene_list,TU_cleaved,...
                                         Sub_TU_cleaved,...
                                         TU,Functional_protein,...
                                         E_Enzyme_formation,...
                                         E_Enzyme_dilution,...
                                         E_Protein_degradation,...
                                         E_RNA_dilution);

%% modelling: tRNA modification.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Collect and store info.
% tRNA modification were collected based on a published paper and
% bioinformatics analysis, and the catalyst for each reaction was
% determined based on genome annotation. Note that unknown genes were
% either removed for the case that the reaction is catalyzed by the single 
% unknown gene or replaced by another known subunit if it acts as one 
% subunit of a complex.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Confirm no 'or' in catalyst %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Add tRNA modification reactions.
[E_tRNA_modification,...
 FUtRNA,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddtRNAModificationRxn(Functional_protein,...
                                                 E_Enzyme_formation,...
                                                 E_Enzyme_dilution,...
                                                 E_Protein_degradation);

%% modelling: Generic RNA renaming.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Add generic RNA renaming reactions.
[E_Generic_RNA_renaming,...
 E_RNA_dilution] = AddGenericRNArenamingRxn(FUtRNA,...
                                            Seq_gene_NA_total,...
                                            E_RNA_dilution);

%% modelling: rRNA modification.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Confirm no 'or' in catalyst %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Add rRNA modification reactions.
E_rRNA_modification = AddrRNAModificationRxn;

%% modelling: Ribosomal assembly.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Note that L33 has three coding genes, so three reactions should be
%formulated to produce L33. Besides, llmg_1208 can code both L7 and L12,
%so llmg_1208 should be used twice.

% Generate matrix.
E_Ribosomal_assembly = MatrixGeneration;

% Formation of ribosome protein.
[E_Ribosomal_assembly,...
 E_Protein_degradation]= AddRibosomeProteinRxn(E_Ribosomal_assembly,...
                                               Functional_protein,...
                                               E_Protein_degradation);

% Generate ribosomal assembly reactions.
[E_Ribosomal_assembly,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddRibosomalAssemblyRxn(E_Ribosomal_assembly,...
                                                  Functional_protein,...
                                                  E_Enzyme_formation,...
                                                  E_Enzyme_dilution,...
                                                  E_Protein_degradation);

%% modelling: tRNA charging.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The reaction formulation for this subprocess is based on KEGG pathway
% database, i.e., Aminoacyl-tRNA biosynthesis.

% Add tRNA charging reactions.
[E_tRNA_charging,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddtRNAChargingRxn(E_Generic_RNA_renaming,...
                                             Functional_protein,...
                                             E_Enzyme_formation,...
                                             E_Enzyme_dilution,...
                                             E_Protein_degradation);

%% modelling: Translation.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% All the TUs in the model can be used as templates to generate peptides.
% Whether a TU should be translated depends on whether or not one of its
% translation products is needed in the model.

% Add translation reactions.
[E_Translation,...
 Translated_gene,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddTranslationRxn(TU_degraded,...
                                            TU,Sub_TU_cleaved,Gene_list,...
                                            Seq_gene_NA_total,...
                                            Seq_CDS_AA_total,...
                                            E_tRNA_charging,...
                                            Functional_protein,...
                                            E_Enzyme_formation,...
                                            E_Enzyme_dilution,...
                                            E_Protein_degradation);

%% modelling: Protein maturation.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This process will modify the nascent peptides released from translation
% termination process, i.e., remove formyl-group for all the peptides and
% remove methionyl-group for the case that the mature protein of the gene
% does not start with methionine.  

% Add protein maturation reactions.
[E_Protein_maturation,...
 Translated_gene,...
 E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddProteinMaturationRxn(Translated_gene,...
                                                  Functional_protein,...
                                                  E_Enzyme_formation,...
                                                  E_Enzyme_dilution,...
                                                  E_Protein_degradation);

%% modelling: Protein degradation.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This process represents 1) breakdown of catalyst complexes into 
% sub-proteins and 2) proteolysis of proteins into amino acids. The first 
% step has already been done in the previous subprocesses, so this part
% only focus on the proteolysis of proteins into amino acids.

% Add protein degradation reactions.
[E_Enzyme_formation,...
 E_Enzyme_dilution,...
 E_Protein_degradation] = AddProteinDegradationRxn(Functional_protein,...
                                                   Translated_gene,...
                                                   E_Enzyme_formation,...
                                                   E_Enzyme_dilution,...
                                                   E_Protein_degradation);

%% modelling: Calculate molecular weight of protein, RNA and ribosome.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[Info_mRNA,...
 Info_tRNA,...
 Info_protein,...
 Info_enzyme,...
 Info_ribosome] = CalculateInfo(TU,TU_degraded,Sub_TU_cleaved,...
                                Gene_list,Seq_gene_NA_total,...
                                Translated_gene,Functional_protein,...
                                E_Enzyme_formation);
                            
%% modelling: Sum up.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Model_Matrix = MatrixAppend(Model_Matrix,E_Protein_assembly);
Model_Matrix = MatrixAppend(Model_Matrix,M_Metabolism);
Model_Matrix = MatrixAppend(Model_Matrix,E_Transcription);
Model_Matrix = MatrixAppend(Model_Matrix,E_Stable_RNA_cleavage);
Model_Matrix = MatrixAppend(Model_Matrix,E_mRNA_degradation);
Model_Matrix = MatrixAppend(Model_Matrix,E_tRNA_modification);
Model_Matrix = MatrixAppend(Model_Matrix,E_Generic_RNA_renaming);
Model_Matrix = MatrixAppend(Model_Matrix,E_rRNA_modification);
Model_Matrix = MatrixAppend(Model_Matrix,E_Ribosomal_assembly);
Model_Matrix = MatrixAppend(Model_Matrix,E_tRNA_charging);
Model_Matrix = MatrixAppend(Model_Matrix,E_Translation);
Model_Matrix = MatrixAppend(Model_Matrix,E_Protein_maturation);
Model_Matrix = MatrixAppend(Model_Matrix,E_Protein_degradation);
Model_Matrix = MatrixAppend(Model_Matrix,E_Enzyme_formation);
Model_Matrix = MatrixAppend(Model_Matrix,E_Enzyme_dilution);
Model_Matrix = MatrixAppend(Model_Matrix,E_RNA_dilution);

clear E_Protein_assembly M_Metabolism E_Transcription... 
      E_Stable_RNA_cleavage E_mRNA_degradation E_tRNA_modification...
      E_Generic_RNA_renaming E_rRNA_modification E_Ribosomal_assembly...
      E_tRNA_charging E_Translation E_Protein_maturation...
      E_Protein_degradation E_Enzyme_formation E_Enzyme_dilution...
      E_RNA_dilution;

clear Functional_protein FUtRNA Metabolic_Matrix...
      Seq_CDS_AA_total Seq_gene_NA_total Sub_TU_cleaved Translated_gene...
      TU TU_degraded TU_cleaved;
  
%% modelling: Biomass dilution reaction.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% As the model accounts for the dilution of proteins and RNA, the
% biomass dilution reaction represents the rest of the cell materials as
% well as the unmodeled protein.

Model_Matrix = AddBiomassDilutionRxn(Model_Matrix,0.42,40);
% 0.42 is f_unmodeled, unmodeled protein proportion (g/g total protein).
% 40 is GAM.

%% modelling: Convert ME-Matrix to COBRA model.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

pcLactis_Model = Matrix2CBModel(Model_Matrix);
writeCbModel(pcLactis_Model,'xls','pcLactis_Model.xls');

%% Save data
cd Simulations/;
save('Info_enzyme.mat','Info_enzyme');
save('Info_mRNA.mat','Info_mRNA');
save('Info_protein.mat','Info_protein');
save('Info_ribosome.mat','Info_ribosome');
save('Info_tRNA.mat','Info_tRNA');
cd ../;

save('Gene_list.mat','Gene_list');
save('M_Model.mat','M_Model');
save('pcLactis_Model.mat','pcLactis_Model');

toc;